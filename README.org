#+SETUPFILE: Setup/setupFile.org
#+TITLE: Emacs code 

* What is it?

This package is a tool to quickly generate a project structure to be
used with OrgMode. We provide a bash script =createOrgProject.sh
PROJECTNAME= that populate the =PROJECTNAME/= directory with all the
required files.


The generated =PROJECTNAME/= directory structure is:
#+BEGIN_EXAMPLE
TODO
#+END_EXAMPLE


To use the project (template) simply add this function to your Emacs =init.el= 

#+NAME: my-project-configuration
#+BEGIN_SRC emacs-lisp 
(defun my-project-configuration ()
  "Find my-project-root as parent directory of the closest .dir-locals.el file, 
then load my-project-root/Setup/setupFile.el project configuration file "
  (interactive)
  (let ((enable-local-variables :all))
    (setq my-project-root (let ((d (dir-locals-find-file ".")))
			    (when d (file-name-directory (if (stringp d) d (car d))))))

    (if my-project-root
	(let ((my-project-setup-file (concat my-project-root "Setup/setupFile.el")))
	  (if (file-exists-p my-project-setup-file)
	      (load my-project-setup-file nil t t nil)
	    (error "Project %s setup file not found" my-project-setup-file)))
      (error "Project root dir not found (missing .dir-locals.el file)"))))
#+END_SRC

Its role is to found project root (the closest .dir-locals.el file)
and to load the project configuration =Setup/setupFile.el=. 

* The script

#+BEGIN_SRC bash :tangle create_orgMode_project :shebang #!/bin/bash
#################
# Parse command #
#################

set -e

error=0
force=0
project_dir=""

while [ "$1" != "" ]; do
    case $1 in
        -f )       force=1
		   ;;
	-* )       error=1
                   ;;
        ,* )       if [ "$project_dir" == "" ]; then 
		      project_dir=$1 
		  else 
		      error=1 
		  fi 
    esac
    shift
done

if [ $error == 1 ]; then
    echo "Usage: $(basename $0) project_dir -f"
    echo ""
    echo " Create a directory 'project_dir' and populate it with some configuration files"
    echo " By default never overwrite files, use -f to force overwriting"
    exit 0
fi

##########################
# Creates root directory #
##########################

echo "Creates directory $project_dir" 
mkdir -p "$project_dir"

#############################
# Creates setup dir & files #
#############################

echo "Creates directory $project_dir/Setup" 
mkdir -p "$project_dir/Setup"

#----------------

current_file="$project_dir/Setup/setupFile.org"

if [ "$force" -eq 1 ] || [ ! -f "$current_file" ]; then
    echo "Creates file      $current_file" 
    more > "$current_file" <<'//MY_CODE_STREAM' 
,#+SETUPFILE: options.org
,#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="http://orgmode.org/worg/style/worg.css"/>
,#+HTML_HEAD: <style type="text/css">body{ max-width:80%; }</style>
,#+INFOJS_OPT: view:showall mouse:underline path:http://orgmode.org/org-info.js home:theindex.html
//MY_CODE_STREAM
else 
    echo "File $current_file already exists, aborted! (you can use -f to force overwrite)" 
    exit 1
fi

#----------------

current_file="$project_dir/Setup/setupFile-1.org"

if [ "$force" -eq 1 ] || [ ! -f "$current_file" ]; then
    echo "Creates file      $current_file" 
    more > "$current_file" <<'//MY_CODE_STREAM' 
,#+SETUPFILE: options.org
,#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="http://orgmode.org/worg/style/worg.css"/>
,#+HTML_HEAD: <style type="text/css">body{ max-width:80%; }</style>
,#+INFOJS_OPT: view:showall mouse:underline path:http://orgmode.org/org-info.js home:../theindex.html
//MY_CODE_STREAM
else 
    echo "File $current_file already exists, aborted! (you can use -f to force overwrite)" 
    exit 1
fi

#----------------

current_file="$project_dir/Setup/setupFile-2.org"

if [ "$force" -eq 1 ] || [ ! -f "$current_file" ]; then
    echo "Creates file      $current_file" 
    more > "$current_file" <<'//MY_CODE_STREAM' 
,#+SETUPFILE: options.org
,#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="http://orgmode.org/worg/style/worg.css"/>
,#+HTML_HEAD: <style type="text/css">body{ max-width:80%; }</style>
,#+INFOJS_OPT: view:showall mouse:underline path:http://orgmode.org/org-info.js home:../../theindex.html
//MY_CODE_STREAM
else 
    echo "File $current_file already exists, aborted! (you can use -f to force overwrite)" 
    exit 1
fi

#----------------

current_file="$project_dir/Setup/setupFile-3.org"

if [ "$force" -eq 1 ] || [ ! -f "$current_file" ]; then
    echo "Creates file      $current_file" 
    more > "$current_file" <<'//MY_CODE_STREAM' 
,#+SETUPFILE: options.org
,#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="http://orgmode.org/worg/style/worg.css"/>
,#+HTML_HEAD: <style type="text/css">body{ max-width:80%; }</style>
,#+INFOJS_OPT: view:showall mouse:underline path:http://orgmode.org/org-info.js home:../../../theindex.html
//MY_CODE_STREAM
else 
    echo "File $current_file already exists, aborted! (you can use -f to force overwrite)" 
    exit 1
fi

#----------------

current_file="$project_dir/Setup/setupFile-4.org"

if [ "$force" -eq 1 ] || [ ! -f "$current_file" ]; then
    echo "Creates file      $current_file" 
    more > "$current_file" <<'//MY_CODE_STREAM' 
,#+SETUPFILE: options.org
,#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="http://orgmode.org/worg/style/worg.css"/>
,#+HTML_HEAD: <style type="text/css">body{ max-width:80%; }</style>
,#+INFOJS_OPT: view:showall mouse:underline path:http://orgmode.org/org-info.js home:../../../../theindex.html
//MY_CODE_STREAM
else 
    echo "File $current_file already exists, aborted! (you can use -f to force overwrite)" 
    exit 1
fi

#----------------

current_file="$project_dir/Setup/setupFile.el"

if [ "$force" -eq 1 ] || [ ! -f "$current_file" ]; then
    echo "Creates file      $current_file" 
    more > "$current_file" <<'//MY_CODE_STREAM' 
(if my-project-root
    ;; Configuration
    (progn
      (message "Configuring %s " my-project-root)
      ;;
      ;; Local bibliography
      ;;
      (setq my-bibtex-filename 
	    (concat my-project-root "Bibliography/bibliography.bib"))
      (if (file-exists-p my-bibtex-filename)
	  ;; If bibliography.bib exists 
	  (setq reftex-default-bibliography  `(,my-bibtex-filename)
		
		bibtex-completion-bibliography my-bibtex-filename
		bibtex-completion-library-path (file-name-directory my-bibtex-filename)
		bibtex-completion-notes-path (file-name-directory my-bibtex-filename)
		
		org-ref-default-bibliography  `(,my-bibtex-filename)
		org-ref-pdf-directory (file-name-directory my-bibtex-filename)
	  )
	;; otherwise unbound meaningless my-bibtex-filename
	(makunbound 'my-bibtex-filename)
	)
      ;;
      ;; Agenda files
      ;;
      (setq org-agenda-files
	    (mapcar 'abbreviate-file-name
		    (split-string
		     (shell-command-to-string (format "find %s -name \"*.org\"" my-project-root))
		     "\n")))
      ;;
      ;; My my-workInProgress-filename and its associated captures
      ;;
      (setq my-workInProgress-filename (concat my-project-root "workInProgress.org"))

      (when (file-exists-p my-workInProgress-filename)
	(setq org-capture-templates
	      `(
		("t"
		 "Todo" entry (file+headline ,my-workInProgress-filename "Project TODO")
		 "* TODO %^{Title?} [/] %^G\n:PROPERTIES:\n:Created: %U\n:END:\n\n - [ ] %?"
		 :empty-lines 1  
		 :create t
		)
		
		("T"
		 "Todo with file link" entry (file+headline ,my-workInProgress-filename "Project TODO")
		 "* TODO %^{Title|%f} [/] %^G\n:PROPERTIES:\n:Created: \
		 %U\n:END:\n\n[[%l][In file %f]]:\n\n#+BEGIN_EXAMPLE\n%i\n#+END_EXAMPLE\n\n - [ ] %?"
		 :empty-lines 1  
		 :create t
		)
		
		("j" "Journal" entry (file+olp+datetree ,my-workInProgress-filename "Project Journal")
		 "* %^{Title} %^G\n\n%?"
		 :empty-lines 1  
		 :create t
		)

		("J" 
		"Journal with file link" entry (file+olp+datetree ,my-workInProgress-filename "Project journal")
		 "* %^{Title|%f} %^G\n\n[[%l][In file %f]]:\n\n#+BEGIN_EXAMPLE\n%i\n#+END_EXAMPLE\n\n%?"
		 :empty-lines 1  
		 :create t
		)
		;; CAVEAT: emacs must run in server mode for org-protocol
		;; One must use this function:
		;;
		;; (defun transform-square-brackets-to-round-ones(string-to-transform)
		;;   "Transforms [ into ( and ] into ), other chars left unchanged."
		;;   (concat 
		;;   (mapcar #'(lambda (c) (if (equal c ?[) ?\( (if (equal c ?]) ?\) c))) string-to-transform))
		;;   )
		;;
		;; See: https://github.com/sprig/org-capture-extension#set-up-handlers-in-emacs
		;; for further details
		;;
		("L" 
		"Protocol Link" entry (file+headline ,my-workInProgress-filename "W3 Links")
		"* [[%:link][%(transform-square-brackets-to-round-ones \"%:description\")]] \
		%^G\n:PROPERTIES:\n:Created: %U\n:END:\n\n%?"
		:empty-lines 1  
		:create t
		)
		
		("p" 
		"Protocol" entry (file+headline ,my-workInProgress-filename "W3 Links")
		 "* [[%:link][%(transform-square-brackets-to-round-ones \"%:description\")]] \
		 %^G\n:PROPERTIES:\n:Created: %U\n:END:\n#+BEGIN_EXAMPLE\n%i\n#+END_EXAMPLE\n\n%?"
		 :empty-lines 1  
		 :create t
		)
		)))
      ;;
      ;; How to publish
      ;;
      ;; Note: you can publish somewhere else, for instance:
      ;;
      ;; (setq my-publish-dir "~/Temp/Publish")
      ;;
      ;; by default we publish in-place 
      ;; (advantage: C-c C-e h h directly update the published page)
      (setq my-publish-dir my-project-root)

      (setq my-project-name "My_Project_Name")

      (setq org-publish-project-alist
	    `(
	      (,(concat my-project-name "_Org")
	       :base-directory ,my-project-root
	       :base-extension "org"
	       :recursive t
	       :publishing-directory ,my-publish-dir
	       :publishing-function org-html-publish-to-html
	       :htmlize-source t
	       :org-html-head-include-default-style nil
	       :exclude "Setup*\\|sitemap.org"
	       :makeindex t
	       :auto-sitemap t
	       :sitemap-title ,my-project-name 
	      )

	      ;; ("PPack_Tangle"
	      ;;  :base-directory ,my-project-root
	      ;;  :base-extension "org"
	      ;;  :recursive t
	      ;;  :publishing-directory ,my-publish-dir
	      ;;  :publishing-function org-babel-tangle-publish
	      ;;  :exclude ".*bazel-.*"
	      ;;  )

	      (,(concat my-project-name "_Data")
	       :base-directory ,my-project-root
	       :base-extension "nb\\|?pp\\|png"
	       :recursive t
	       :publishing-directory ,my-publish-dir
	       :publishing-function org-publish-attachment
	       :exclude ".*bazel-.*"
	      )

	      ;; Main
	      (,my-project-name
	       :components (,(concat my-project-name "_Org")
			    ;;"DefaultProject_Tangle"
			    ,(concat my-project-name "_Data"))
	      )
	      )
	)
      ) ; progn
  ;; else
  (error "Project root undefined")
    )
//MY_CODE_STREAM
else 
    echo "File $current_file already exists, aborted! (you can use -f to force overwrite)" 
    exit 1
fi

#############################
# Creates biblio dir & file #
#############################

echo "Creates directory $project_dir/Bibliography" 
mkdir -p "$project_dir/Bibliography"

#----------------

current_file="$project_dir/Bibliography/bibliography.bib"

if [ "$force" -eq 1 ] || [ ! -f "$current_file" ]; then
    echo "Creates file      $current_file" 
    more > "$current_file" <<'//MY_CODE_STREAM' 
@book{dominik16_org_mode_ref_manual,
  author =	 {Dominik, C.},
  title =	 {ORG MODE 9 REF MANUAL},
  year =	 2016,
  publisher =	 {ARTPOWER International PUB},
  url =		 {https://books.google.fr/books?id=E4kLMQAACAAJ},
  isbn =	 9789888406852,
}
//MY_CODE_STREAM
else 
    echo "File $current_file already exists, aborted! (you can use -f to force overwrite)" 
    exit 1
fi

##############################################
# Creates remaining file (theindex.org, ...) #
##############################################

current_file="$project_dir/theindex.org"

if [ "$force" -eq 1 ] || [ ! -f "$current_file" ]; then
    echo "Creates file      $current_file" 
    more > "$current_file" <<'//MY_CODE_STREAM'
,#+SETUPFILE: Setup/setupFile.org

,* Sitemap

,#+INCLUDE: "sitemap.org"

,* Index

,#+INCLUDE: "theindex.inc"
//MY_CODE_STREAM
else 
    echo "File $current_file already exists, aborted! (you can use -f to force overwrite)" 
    exit 1
fi

#----------------

current_file="$project_dir/.dir-locals.el"

if [ "$force" -eq 1 ] || [ ! -f "$current_file" ]; then
    echo "Creates file      $current_file" 
    more > "$current_file" <<'//MY_CODE_STREAM'
;; Must exist because this file is used to find my-project-root
;;
;; Here contains nothing (), however you can fill it with
;; your usual stuff.
()
//MY_CODE_STREAM
else 
    echo "File $current_file already exists, aborted! (you can use -f to force overwrite)" 
    exit 1
fi

#----------------

current_file="$project_dir/workInProgress.org"

if [ "$force" -eq 1 ] || [ ! -f "$current_file" ]; then
    echo "Creates file      $current_file" 
    more > "$current_file" <<'//MY_CODE_STREAM'
,#+SETUPFILE: Setup/setupFile.org
,#+TITLE: Work in Progress

,* Journal
,* Project TODO
,* W3 Links
//MY_CODE_STREAM
else 
    echo "File $current_file already exists, aborted! (you can use -f to force overwrite)" 
    exit 1
fi
#+END_SRC


* Quick starter

#+BEGIN_SRC 
createOrgProject.sh MyProject
#+END_SRC

#+BEGIN_SRC 
emacs  MyProject/theindex.org &
#+END_SRC
(attention do not forget to define the [[my-project-configuration][my-project-configuration]] function)

Then you can Publish it: 
 - M-x my-project-configuration
 - C-c C-e P p
-> then firefox theindex.html

Add a note or a bibliographical item.
